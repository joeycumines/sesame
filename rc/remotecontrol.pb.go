// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: sesame/v1alpha1/remotecontrol.proto

package rc

import (
	netaddr "github.com/joeycumines/sesame/type/netaddr"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NetConnRequest models a message sent from a RemoteControl.NetConn client to the server.
// See also documentation of that method.
type NetConnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*NetConnRequest_Dial_
	//	*NetConnRequest_Bytes
	Data isNetConnRequest_Data `protobuf_oneof:"data"`
}

func (x *NetConnRequest) Reset() {
	*x = NetConnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sesame_v1alpha1_remotecontrol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetConnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetConnRequest) ProtoMessage() {}

func (x *NetConnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sesame_v1alpha1_remotecontrol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetConnRequest.ProtoReflect.Descriptor instead.
func (*NetConnRequest) Descriptor() ([]byte, []int) {
	return file_sesame_v1alpha1_remotecontrol_proto_rawDescGZIP(), []int{0}
}

func (m *NetConnRequest) GetData() isNetConnRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *NetConnRequest) GetDial() *NetConnRequest_Dial {
	if x, ok := x.GetData().(*NetConnRequest_Dial_); ok {
		return x.Dial
	}
	return nil
}

func (x *NetConnRequest) GetBytes() []byte {
	if x, ok := x.GetData().(*NetConnRequest_Bytes); ok {
		return x.Bytes
	}
	return nil
}

type isNetConnRequest_Data interface {
	isNetConnRequest_Data()
}

type NetConnRequest_Dial_ struct {
	Dial *NetConnRequest_Dial `protobuf:"bytes,1,opt,name=dial,proto3,oneof"`
}

type NetConnRequest_Bytes struct {
	Bytes []byte `protobuf:"bytes,2,opt,name=bytes,proto3,oneof"`
}

func (*NetConnRequest_Dial_) isNetConnRequest_Data() {}

func (*NetConnRequest_Bytes) isNetConnRequest_Data() {}

// NetConnResponse models a message sent from a RemoteControl.NetConn server to the client.
// See also documentation of that method.
type NetConnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*NetConnResponse_Conn_
	//	*NetConnResponse_Bytes
	Data isNetConnResponse_Data `protobuf_oneof:"data"`
}

func (x *NetConnResponse) Reset() {
	*x = NetConnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sesame_v1alpha1_remotecontrol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetConnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetConnResponse) ProtoMessage() {}

func (x *NetConnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sesame_v1alpha1_remotecontrol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetConnResponse.ProtoReflect.Descriptor instead.
func (*NetConnResponse) Descriptor() ([]byte, []int) {
	return file_sesame_v1alpha1_remotecontrol_proto_rawDescGZIP(), []int{1}
}

func (m *NetConnResponse) GetData() isNetConnResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *NetConnResponse) GetConn() *NetConnResponse_Conn {
	if x, ok := x.GetData().(*NetConnResponse_Conn_); ok {
		return x.Conn
	}
	return nil
}

func (x *NetConnResponse) GetBytes() []byte {
	if x, ok := x.GetData().(*NetConnResponse_Bytes); ok {
		return x.Bytes
	}
	return nil
}

type isNetConnResponse_Data interface {
	isNetConnResponse_Data()
}

type NetConnResponse_Conn_ struct {
	Conn *NetConnResponse_Conn `protobuf:"bytes,1,opt,name=conn,proto3,oneof"`
}

type NetConnResponse_Bytes struct {
	Bytes []byte `protobuf:"bytes,2,opt,name=bytes,proto3,oneof"`
}

func (*NetConnResponse_Conn_) isNetConnResponse_Data() {}

func (*NetConnResponse_Bytes) isNetConnResponse_Data() {}

// Dial models the initial request.
type NetConnRequest_Dial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *netaddr.NetAddr     `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Timeout *durationpb.Duration `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *NetConnRequest_Dial) Reset() {
	*x = NetConnRequest_Dial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sesame_v1alpha1_remotecontrol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetConnRequest_Dial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetConnRequest_Dial) ProtoMessage() {}

func (x *NetConnRequest_Dial) ProtoReflect() protoreflect.Message {
	mi := &file_sesame_v1alpha1_remotecontrol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetConnRequest_Dial.ProtoReflect.Descriptor instead.
func (*NetConnRequest_Dial) Descriptor() ([]byte, []int) {
	return file_sesame_v1alpha1_remotecontrol_proto_rawDescGZIP(), []int{0, 0}
}

func (x *NetConnRequest_Dial) GetAddress() *netaddr.NetAddr {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *NetConnRequest_Dial) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

// Conn models the initial response.
type NetConnResponse_Conn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Local  *netaddr.NetAddr `protobuf:"bytes,1,opt,name=local,proto3" json:"local,omitempty"`
	Remote *netaddr.NetAddr `protobuf:"bytes,2,opt,name=remote,proto3" json:"remote,omitempty"`
}

func (x *NetConnResponse_Conn) Reset() {
	*x = NetConnResponse_Conn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sesame_v1alpha1_remotecontrol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetConnResponse_Conn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetConnResponse_Conn) ProtoMessage() {}

func (x *NetConnResponse_Conn) ProtoReflect() protoreflect.Message {
	mi := &file_sesame_v1alpha1_remotecontrol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetConnResponse_Conn.ProtoReflect.Descriptor instead.
func (*NetConnResponse_Conn) Descriptor() ([]byte, []int) {
	return file_sesame_v1alpha1_remotecontrol_proto_rawDescGZIP(), []int{1, 0}
}

func (x *NetConnResponse_Conn) GetLocal() *netaddr.NetAddr {
	if x != nil {
		return x.Local
	}
	return nil
}

func (x *NetConnResponse_Conn) GetRemote() *netaddr.NetAddr {
	if x != nil {
		return x.Remote
	}
	return nil
}

var File_sesame_v1alpha1_remotecontrol_proto protoreflect.FileDescriptor

var file_sesame_v1alpha1_remotecontrol_proto_rawDesc = []byte{
	0x0a, 0x23, 0x73, 0x65, 0x73, 0x61, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x73, 0x65, 0x73, 0x61, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x73, 0x65, 0x73, 0x61, 0x6d, 0x65, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x2f, 0x6e, 0x65, 0x74, 0x61, 0x64, 0x64, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd9, 0x01, 0x0a, 0x0e, 0x4e, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x73, 0x61, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x69, 0x61, 0x6c,
	0x12, 0x16, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x1a, 0x6b, 0x0a, 0x04, 0x44, 0x69, 0x61, 0x6c,
	0x12, 0x2e, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x73, 0x61, 0x6d, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x4e, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd0, 0x01,
	0x0a, 0x0f, 0x4e, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x73, 0x65, 0x73, 0x61, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x4e, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x6e, 0x12, 0x16,
	0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52,
	0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x1a, 0x60, 0x0a, 0x04, 0x43, 0x6f, 0x6e, 0x6e, 0x12, 0x2a,
	0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x65, 0x73, 0x61, 0x6d, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x73,
	0x61, 0x6d, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x32, 0x63, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x12, 0x52, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x12, 0x1f, 0x2e, 0x73,
	0x65, 0x73, 0x61, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4e,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x73, 0x65, 0x73, 0x61, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4e, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x6f, 0x65, 0x79, 0x63, 0x75, 0x6d, 0x69, 0x6e, 0x65, 0x73, 0x2f,
	0x73, 0x65, 0x73, 0x61, 0x6d, 0x65, 0x2f, 0x72, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_sesame_v1alpha1_remotecontrol_proto_rawDescOnce sync.Once
	file_sesame_v1alpha1_remotecontrol_proto_rawDescData = file_sesame_v1alpha1_remotecontrol_proto_rawDesc
)

func file_sesame_v1alpha1_remotecontrol_proto_rawDescGZIP() []byte {
	file_sesame_v1alpha1_remotecontrol_proto_rawDescOnce.Do(func() {
		file_sesame_v1alpha1_remotecontrol_proto_rawDescData = protoimpl.X.CompressGZIP(file_sesame_v1alpha1_remotecontrol_proto_rawDescData)
	})
	return file_sesame_v1alpha1_remotecontrol_proto_rawDescData
}

var file_sesame_v1alpha1_remotecontrol_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_sesame_v1alpha1_remotecontrol_proto_goTypes = []interface{}{
	(*NetConnRequest)(nil),       // 0: sesame.v1alpha1.NetConnRequest
	(*NetConnResponse)(nil),      // 1: sesame.v1alpha1.NetConnResponse
	(*NetConnRequest_Dial)(nil),  // 2: sesame.v1alpha1.NetConnRequest.Dial
	(*NetConnResponse_Conn)(nil), // 3: sesame.v1alpha1.NetConnResponse.Conn
	(*netaddr.NetAddr)(nil),      // 4: sesame.type.NetAddr
	(*durationpb.Duration)(nil),  // 5: google.protobuf.Duration
}
var file_sesame_v1alpha1_remotecontrol_proto_depIdxs = []int32{
	2, // 0: sesame.v1alpha1.NetConnRequest.dial:type_name -> sesame.v1alpha1.NetConnRequest.Dial
	3, // 1: sesame.v1alpha1.NetConnResponse.conn:type_name -> sesame.v1alpha1.NetConnResponse.Conn
	4, // 2: sesame.v1alpha1.NetConnRequest.Dial.address:type_name -> sesame.type.NetAddr
	5, // 3: sesame.v1alpha1.NetConnRequest.Dial.timeout:type_name -> google.protobuf.Duration
	4, // 4: sesame.v1alpha1.NetConnResponse.Conn.local:type_name -> sesame.type.NetAddr
	4, // 5: sesame.v1alpha1.NetConnResponse.Conn.remote:type_name -> sesame.type.NetAddr
	0, // 6: sesame.v1alpha1.RemoteControl.NetConn:input_type -> sesame.v1alpha1.NetConnRequest
	1, // 7: sesame.v1alpha1.RemoteControl.NetConn:output_type -> sesame.v1alpha1.NetConnResponse
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_sesame_v1alpha1_remotecontrol_proto_init() }
func file_sesame_v1alpha1_remotecontrol_proto_init() {
	if File_sesame_v1alpha1_remotecontrol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sesame_v1alpha1_remotecontrol_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetConnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sesame_v1alpha1_remotecontrol_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetConnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sesame_v1alpha1_remotecontrol_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetConnRequest_Dial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sesame_v1alpha1_remotecontrol_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetConnResponse_Conn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sesame_v1alpha1_remotecontrol_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*NetConnRequest_Dial_)(nil),
		(*NetConnRequest_Bytes)(nil),
	}
	file_sesame_v1alpha1_remotecontrol_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*NetConnResponse_Conn_)(nil),
		(*NetConnResponse_Bytes)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sesame_v1alpha1_remotecontrol_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sesame_v1alpha1_remotecontrol_proto_goTypes,
		DependencyIndexes: file_sesame_v1alpha1_remotecontrol_proto_depIdxs,
		MessageInfos:      file_sesame_v1alpha1_remotecontrol_proto_msgTypes,
	}.Build()
	File_sesame_v1alpha1_remotecontrol_proto = out.File
	file_sesame_v1alpha1_remotecontrol_proto_rawDesc = nil
	file_sesame_v1alpha1_remotecontrol_proto_goTypes = nil
	file_sesame_v1alpha1_remotecontrol_proto_depIdxs = nil
}
